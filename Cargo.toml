[package]
name = "rigs"
version = "0.0.3"
edition = "2024"
description = "A orchestration framework for rig"
license = "MIT"
readme = "README.md"
keywords = ["rig", "orchestration", "agent"]

[dependencies]
chrono = { version = "0.4", features = ["serde"] } # A library for date and time
dashmap = { version = "6.1", features = ["serde"] } # A concurrent hashmap
futures = "0.3" # A library for asynchronous programming
petgraph = { version = "0.7", default-features = false, features = [
    "stable_graph",
] } # A graph library
rig-core = "*" # rig-core, we need keep it newest version
rigs-macro = { version = "0.0.1", path = "./rigs-macro" }
serde = { version = "1.0", features = [
    "derive",
] } # serialization and deserialization
serde_json = "1.0" # JSON serialization and deserialization
thiserror = "2.0" # Define custom error types
tokio = { version = "1.44", features = ["sync", "time"] } # Asynchronous runtime
tracing = "0.1" # Logging and tracing
twox-hash = "2.1" # A fast hash algorithm
uuid = { version = "1.16", features = ["v4", "serde"] } # UUID
zstd = "0.13" # Zstandard compression algorithms

[dev-dependencies]
anyhow = "1.0" #  Error handling
dotenv = "0.15" # Load environment variables from .env file
mockall = "0.13" # Mocking library
schemars = "=1.0.0-alpha.17" # Serialize Rust data structures to JSON Schema
tokio = { version = "1.44", features = [
    "macros",
    "rt",
    "rt-multi-thread",
    "test-util",
] } # tokio for testing
tracing-subscriber = { version = "0.3", features = [
    "env-filter",
] } # Tracing subscriber
